package types

import (
	"bytes"

	"github.com/ethereum/go-ethereum/beacon/engine"
	"github.com/ethereum/go-ethereum/common"

	"github.com/ethereum-optimism/optimism/op-service/eth"

	bfttypes "github.com/cometbft/cometbft/types"
)

// fixed size hash of 32 bytes generated by SHA256 or Keccak256
type (
	Hash      = common.Hash
	CosmosTx  = bfttypes.Tx
	PayloadID = engine.PayloadID
)

var (
	emptyPayloadID = PayloadID{}
	UnknownPayload = engine.UnknownPayload
	ZeroHash       = Hash{}
)

// Verifies HeadBlockHash is empty
func IsForkchoiceStateEmpty(state *eth.ForkchoiceState) bool {
	return bytes.Equal(state.HeadBlockHash[:], ZeroHash[:])
}

func HasPayloadAttributes(attrs *eth.PayloadAttributes) bool {
	return attrs.Timestamp != 0 && attrs.Transactions != nil && len(attrs.Transactions) != 0
}

func IsPayloadIDEmpty(id PayloadID) bool {
	return bytes.Equal(id[:], emptyPayloadID[:])
}
